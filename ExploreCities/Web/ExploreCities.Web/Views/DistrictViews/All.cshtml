@model ExploreCities.Web.ViewModels.DistrictViews.AllDistrictViewsViewModel

@{ ViewData["Title"] = "District Views"; }

<div class="page-header text-center">
    <h1 id="tables">District views for: </h1>
    <h1 class="font-weight-bold font-italic">@Model.DistrictName</h1>
</div>

<form method="get" asp-controller="DistrictViews" asp-action="All">

    <input type="hidden" asp-for="@Model.PageNumber">
    <input type="hidden" asp-for="@Model.DistrictId" />
    <input type="hidden" asp-for="@Model.DistrictName" />

    <div class="row d-flex justify-content-between">
        <div class="form-group">
            <label class="text-primary">Show:</label>
            <select class="btn btn-outline-primary" name="PageSize" onchange="this.form.submit();">
                <option value="6" selected="@(Model.PageSize == 6 ? true : false)">6</option>
                <option value="12" selected="@(Model.PageSize == 12 ? true : false)">12</option>
                <option value="24" selected="@(Model.PageSize == 24 ? true : false)">24</option>
                <option value="48" selected="@(Model.PageSize == 48 ? true : false)">48</option>
            </select>
        </div>
        <div class="form-group">
            <label class="text-primary">Sort by:</label>
            <select class="btn btn-outline-primary" name="Sorter" id="Sorter" onchange="this.form.submit();">
                <option value="1" selected="@(Model.Sorter.ToString() == "Username" ? true : false)">Username</option>
                <option value="2" selected="@(Model.Sorter.ToString() == "CreatedOn" ? true : false)">Created on (desc.)</option>
                <option value="3" selected="@(Model.Sorter.ToString() == "ModifiedOn" ? true : false)">Modified on (desc.)</option>
            </select>
        </div>
    </div>
</form>
<hr />

<div class="card-deck container-fluid">
    @foreach (var item in Model.AllDistrictViews)
    {
<div class="col-md-4 mb-4">
    <div class="card text-body bg-light" style="max-width: 20rem; height: 450px">
        <a asp-controller="DistrictViews" asp-action="Details" asp-route-id="@item.Id">
            <img style="height: 200px; width: 100%" class="card-img-top" src="@item.PictureUrl" alt="Card image cap">
        </a>
        <div class="card-body">
            <h5 class="card-title">
                Creator<a class="text-body" asp-area="" asp-controller="Users" asp-action="Details" asp-route-id="@item.UserId">
                    @item.Username
                </a> - click to see profile
            </h5>
            <p class="card-text">This card is create on @item.CreatedOn.</p>
        </div>
        <div class="row">
            <div class="col">
                <a class="btn btn-outline-primary" asp-area="" asp-controller="DistrictViews" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                <a class="btn btn-outline-warning" asp-area="" asp-controller="DistrictViews" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                <a class=" btn btn-outline-info" asp-area="" asp-controller="DistrictViews" asp-action="Details" asp-route-id="@item.Id">Details</a>
            </div>
        </div>

        <div class="card-footer">
            @if (item.ModifiedOn != null)
            {
            <small class="text-body">Last modified - @item.ModifiedOn</small> }
            else
            {
            <small class="text-body">Not modified</small>}
        </div>
    </div>
</div>}
</div>

<div class="d-flex justify-content-around">
    @Html.PagedListPager((IPagedList)Model.AllDistrictViews,
                        page => Url.Action("All",
                            new
                            {
                                DistrictId = Model.DistrictId,
                                PageNumber = page,
                                PageSize = Model.PageSize,
                            }),
                        new PagedListRenderOptions
                        {
                            MaximumPageNumbersToDisplay = 5,
                            LiElementClasses = new string[] { "page-item" },
                            PageClasses = new string[] { "page-link" }
                        })
</div>