@using ExploreCities.Data.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


@model ExploreCities.Web.ViewModels.DistrictViews.AllDistrictViewsViewModel

@{ ViewData["Title"] = "District Views"; }

<h1 class=" text-center"> Views for @Model.DistrictName district</h1>

<form method="get" asp-controller="DistrictViews" asp-action="All">

    <div class="row d-flex justify-content-between">
        <div class="form-group">
            <label class="text-primary">Show:</label>
            <select class="btn btn-outline-primary" name="PageSize" onchange="this.form.submit();">
                <option value="6" selected="@(Model.PageSize == 6 ? true : false)">6</option>
                <option value="12" selected="@(Model.PageSize == 12 ? true : false)">12</option>
                <option value="24" selected="@(Model.PageSize == 24 ? true : false)">24</option>
                <option value="48" selected="@(Model.PageSize == 48 ? true : false)">48</option>
            </select>
        </div>
        <div class="form-group">
            <label class="text-primary">Sort by:</label>
            <select class="btn btn-outline-primary" name="Sorter" id="Sorter" onchange="this.form.submit();">
                <option value="1" selected="@(Model.Sorter.ToString() == "Username" ? true : false)">Username</option>
                <option value="2" selected="@(Model.Sorter.ToString() == "CreatedOn" ? true : false)">Created on (desc.)</option>
                <option value="3" selected="@(Model.Sorter.ToString() == "ModifiedOn" ? true : false)">Modified on (desc.)</option>
            </select>
        </div>
    </div>
</form>
<hr />

<div class="card-deck container-fluid">
    @foreach (var item in Model.AllDistrictViews)
    {
        <div class="col-md-4 mb-4">
            <div class="card text-body bg-light" style="max-width: 20rem; height: 450px">
                <a asp-controller="DistrictViews" asp-action="Details" asp-route-id="@item.Id">
                    <img style="height: 200px; width: 100%" class="card-img-top" src="@item.PictureUrl" alt="Card image cap">
                </a>
                <div class="card-body">
                    <h5 class="card-title">
                        Creator @item.Username
                    </h5>
                    <p class="card-text">This card is create on @item.CreatedOn.</p>
                </div>
                <div class="row ">
                    <div class="col d-flex justify-content-center" style="width: 100%">
                        @if (this.UserManager.GetUserId(this.User) == item.UserId)
                        {
                            <a class="btn btn-primary mr-1 ml-1" style="width: 80px" asp-area="" asp-controller="DistrictViews" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <a class="btn btn-warning mr-1 ml-1" style="width: 80px" asp-area="" asp-controller="DistrictViews" asp-action="Delete" asp-route-id="@item.Id">Delete</a>}
                        <a class="btn btn-info mr-1 ml-1" style="width: 80px" asp-area="" asp-controller="DistrictViews" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    </div>
                </div>

                <div class="card-footer">
                    @if (item.ModifiedOn != null)
                    {
                        <small class="text-body">Last modified - @item.ModifiedOn</small> }
                    else
                    {
                        <small class="text-body">Not modified</small>}
                </div>
            </div>
        </div>}
</div>

<div class="d-flex justify-content-around">
    @Html.PagedListPager((IPagedList)Model.AllDistrictViews,
                        page => Url.Action("All",
                         new
                         {
                             DistrictId = Model.DistrictId,
                             PageNumber = page,
                             PageSize = Model.PageSize,

                         }),
                            new PagedListRenderOptions
                            {
                                MaximumPageNumbersToDisplay = 5,
                                LiElementClasses = new string[] { "page-item" },
                                PageClasses = new string[] { "page-link" }
                            })
</div>