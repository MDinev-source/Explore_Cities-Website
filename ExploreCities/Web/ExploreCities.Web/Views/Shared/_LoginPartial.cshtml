@using ExploreCities.Common
@using ExploreCities.Data.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{var greeting = this.User.
            IsInRole(GlobalConstants.AdministratorRoleName)
            ? $"Hello Admin {this.User.Identity.Name!}"
            : $"Hello {this.User.Identity.Name!}"; }

<ul class="navbar-nav">
    @if (this.SignInManager.IsSignedIn(this.User))
    {
        <li class="nav-item">
            <a class="nav-link text-primary" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@greeting</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@this.Url.Action("Index", "Home", new { area = string.Empty })">
                <button type="submit" class="nav-link btn btn-link text-primary">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-primary" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-primary" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
