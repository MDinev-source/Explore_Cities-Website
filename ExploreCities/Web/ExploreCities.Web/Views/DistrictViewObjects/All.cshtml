@model ExploreCities.Web.ViewModels.DistrictViewObjects.AllDistrictViewObjectsViewModel

@using ExploreCities.Services.Data
@inject IGetEnumsDataService GetEnumDataService

@{
    ViewData["Title"] = "All Objects";
}

<h1 class="text-center">All Objects for this View</h1>

<form method="get" asp-controller="DistrictViewObjects" asp-action="All">

    <input type="hidden" asp-for="@Model.DistrictViewId" value="@Model.DistrictViewId" />
    @if (Model.DistrictViewObjects.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Type</th>
                    <th scope="col" class="text-center">Name</th>
                    <th scope="col" class="text-center">Pictures</th>
                    <th scope="col" class="text-center">Info</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.DistrictViewObjects)
                {
                    var correctName = GetEnumDataService.ReturnCorrectName(item.ObjectType);
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => correctName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td class="text-center">
                            @Html.DisplayFor(modelItem => item.PicturesCount)
                        </td>
                        <td>
                            <div class="row justify-content-center">
                                <a class=" btn btn-info" style="width: 150px" asp-controller="DistrictViewObjects" asp-action="Details" asp-route-id="@item.Id">Details</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="jumbotron">
            <p class="text-center">
                <em class="text-muted">No objects created.</em>
            </p>
        </div>
    }
</form>

<div class="d-flex justify-content-around">
    @Html.PagedListPager((IPagedList)Model.DistrictViewObjects,
        page => Url.Action("All",
            new
                {
                    DistrictViewId = Model.DistrictViewId,
                    PageNumber = page,
                    PageSize = Model.PageSize,
            }),
        new PagedListRenderOptions
        {
            MaximumPageNumbersToDisplay = 5,
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
        })
</div>